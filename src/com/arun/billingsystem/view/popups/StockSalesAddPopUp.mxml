<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" title="Stock Add"
		 styleName="panelStyle"
		 backgroundColor="#f7f8f5"
		 close="cancelBtn_clickHandler()" xmlns:autocomplete="com.arun.billingsystem.util.autocomplete.*">
	<fx:Declarations>
		<s:RadioButtonGroup id="stockPurchaseRBGroup" />
	</fx:Declarations>
	<s:states>
		<s:State name="ShowGST" />
		<s:State name="DontShowGST" />
	</s:states>
	<fx:Script>
		<![CDATA[
			import com.arun.billingsystem.common.Constant;
			import com.arun.billingsystem.common.ErrorConstant;
			import com.arun.billingsystem.domain.Printer;
			import com.arun.billingsystem.domain.Stock;
			import com.arun.billingsystem.domain.StockAdd;
			import com.arun.billingsystem.event.RootEvent;
			import com.arun.billingsystem.model.UserModel;
			import com.arun.billingsystem.util.FormatUtil;
			import com.arun.billingsystem.util.StringUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import spark.components.Image;
			import spark.layouts.HorizontalAlign;
						
			[Dispatcher]public var dispatch:IEventDispatcher;
			
			private var userModel:UserModel;
			private static var stockAddPopUp:StockAddPopUp;
			private static var stockAddStockArr:ArrayCollection = null ; 
				
			public static function show(userModel:UserModel):void {
				if(userModel != null){
					var salesStockAddPopUp:StockSalesAddPopUp = new StockSalesAddPopUp();
					salesStockAddPopUp.showPopUp(userModel);
				}
			}
			
			public function showPopUp(userModel:UserModel):void {
				this.userModel = userModel;
				if(this.userModel.loadApp.showGST){
					this.currentState = "ShowGST";
				} else {
					this.currentState = "DontShowGST"
				}
				PopUpManager.addPopUp(this, FlexGlobals.topLevelApplication.document, true);
				PopUpManager.centerPopUp(this);
			}
			
			protected function cancelBtn_clickHandler():void {
				var rootEvent:RootEvent = new RootEvent(RootEvent.EVENT_STOCK_CONFIRMATION);
				rootEvent.popUpType = Constant.STOCK_CLOSED;
				dispatch.dispatchEvent(rootEvent);
				PopUpManager.removePopUp(this);
			}
			
			public function stockAdd_creationCompleteHandler():void {
				if(categoryCmbBox != null) {
					stockAddStockArr = new ArrayCollection();
					categoryCmbBox.dataProvider = userModel.categoryList;
				}
				purchaseNameTxtInput.setFocus();
			}
			
			public function addStockBtn_clickHandler():Stock {
				if(checkComplusoryField()){
					var stock:Stock = new Stock();
					stock.purchaseName = purchaseNameTxtInput.text;
					stock.purchaseDate = FormatUtil.dateToString(purchaseDate.selectedDate);
					stock.purchasePrice = Number(purchaseRateTxtInput.text);
					stock.purchaseQty = Number(purchaseQtyTxtInput.text);
					stock.comments = commentTxtArea.text;
					stock.category = categoryCmbBox.selectedItem;
					stock.itemName = itemNameTxtInput.text;
					stock.soldPrice = Number(salesPriceTxtInput.text);
					stock.soldQuantity = Number(picsTxtInput.text);
					stock.totalAmount = (stock.purchaseQty * stock.purchasePrice);
					var printer:Printer = new Printer();
					printer.cgst = cgstTxtInput.text;
					printer.sgst = sgstTxtInput.text;
					printer.igst = igstTxtInput.text;
					var test:String = stockPurchaseRBGroup.selectedValue as String;
					if(test != "" && test == 'Yes'){
						stock.purchaseAmtSettled = stock.totalAmount; 
					} else {
						stock.purchaseAmtSettled = 0;
					}
					stock.printer = printer;
					stock.noOfPrint = Number(picsTxtInput.text);
					var rootEvent:RootEvent = new RootEvent(RootEvent.EVENT_STOCK_CONFIRMATION);
					rootEvent.popUpType = Constant.STOCK_ADD;
					var stockList:ArrayCollection = new ArrayCollection();
					stockList.addItem(stock)
					rootEvent.stockArr = stockList;
					dispatch.dispatchEvent(rootEvent);
					PopUpManager.removePopUp(this);
				}
				return null;
			}
			
			
			public function checkComplusoryField():Boolean {
				var isSuccess:Boolean = false;
				
				var itemName:String = itemNameTxtInput.text;
				var category:String = categoryCmbBox.selectedItem;
				var purchaseRate:Number = Number(purchaseRateTxtInput.text);
				var purchasePics:Number = Number(purchaseQtyTxtInput.text);
				var purchaseName:String = purchaseNameTxtInput.text;
				var purchaseAmtSettle:String = stockPurchaseRBGroup.selectedValue as String;
				
				if((itemName == "" && itemName == null) || (purchaseName == "" && purchaseName == null)){
					ShowAlert.show(ErrorConstant.ERROR_121, Constant.POP_UP, Constant.SHOW_IMG_WAR);
					return isSuccess;
				}
				
				if((category == "" && category == null)){
					ShowAlert.show(ErrorConstant.ERROR_122, Constant.POP_UP, Constant.SHOW_IMG_WAR);
					return isSuccess;
				}
				
				if(purchaseRate <= 0 || purchasePics <= 0){
					ShowAlert.show(ErrorConstant.ERROR_124, Constant.POP_UP, Constant.SHOW_IMG_WAR);
					return isSuccess;
				}
				
				if(purchaseAmtSettle == "" || purchaseAmtSettle == null){
					ShowAlert.show(ErrorConstant.ERROR_142, Constant.POP_UP, Constant.SHOW_IMG_WAR);
					return isSuccess;
				}
				
				return isSuccess = true;
			}
			
			public function categoryCmbBox_focusOutHandler():void
			{
				var category:String = categoryCmbBox.selectedItem;
				if(userModel.categoryList != null && !StringUtil.contains(userModel.categoryList, category)){
					categoryCmbBox.selectedIndex = 0;
					ShowAlert.show(ErrorConstant.ERROR_105, Constant.POP_UP, Constant.SHOW_IMG_WAR);
				}
			}
			
			public function sizeCmbBox_focusOutHandler(event:FocusEvent):void
			{
				var sizeCmb:ComboBox = event.currentTarget as ComboBox ;
				if(sizeCmb != null) {
					var size:String =  sizeCmb.selectedItem;
					if(userModel.sizeList != null && !StringUtil.contains(userModel.sizeList, size)){
						sizeCmb.selectedIndex = 0;
						ShowAlert.show(ErrorConstant.ERROR_102, Constant.POP_UP, Constant.SHOW_IMG_WAR);
					} 
				}
			}
			
			protected function getLabelVGroup(labelName:String, size:int):VGroup {
				var label:Label = new Label();
				label.text = labelName;
				label.styleName = "stocklabelStyle";
				
				var labVGroup:VGroup = getVGroup(size, "left");
				labVGroup.addElement(label);
				return labVGroup;
			}
			
			protected function getVGroup(size:int, align:String):VGroup {
				var vGroup:VGroup = new VGroup();
				vGroup.width = size;
				vGroup.horizontalAlign = align;
				vGroup.verticalAlign = "middle";
				return vGroup;
			}
								
		]]>
	</fx:Script>
	<s:HGroup>
		
		<s:VGroup width="100%" height="100%" gap="5" verticalAlign="middle" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" 
				  creationComplete="stockAdd_creationCompleteHandler()"  id="mainVGroup">
			<mx:VBox width="100%" horizontalAlign="center" styleName="colorBorder" id="purchaseStock"
					 paddingTop="10" paddingBottom="10" paddingRight="10" paddingLeft="10">
				<mx:HBox width="100%" horizontalAlign="center" >
					<s:VGroup width="120" height="100%" horizontalAlign="right" gap="12">
						<mx:Label text="Purchase Name :" styleName="FormlabelStyle"/>
						<mx:Label text="Purchase Rate :" styleName="FormlabelStyle"/>
					</s:VGroup>
					<s:VGroup height="100%" width="150">
						<s:TextInput id="purchaseNameTxtInput" width="160" styleName="TextInputStyle" tabIndex="1"/>
						<s:TextInput id="purchaseRateTxtInput" width="160" restrict="0-9" styleName="TextInputStyle" tabIndex="3"/>
					</s:VGroup>
					<s:VGroup width="120" height="100%" horizontalAlign="right" gap="12">
						<mx:Label text="Purchase Date :" styleName="FormlabelStyle"/>
						<mx:Label text="Purchase Pics :" styleName="FormlabelStyle"/>
					</s:VGroup>
					<s:VGroup height="100%" width="170">
						<mx:DateField id="purchaseDate" selectedDate="{new Date()}" width="160" tabIndex="2" />
						<s:TextInput id="purchaseQtyTxtInput" width="160" restrict="0-9" styleName="TextInputStyle" tabIndex="4"/>
					</s:VGroup>
					
				</mx:HBox>
				<s:HGroup width="100%" horizontalAlign="center">
					<s:VGroup height="100%" width="120" horizontalAlign="right" gap="12" verticalAlign="middle">
						<mx:Label text="Type :" styleName="FormlabelStyle"/>
					</s:VGroup>
					<s:VGroup height="100%" width="150">
						<s:RadioButton id="amtSettled" label="Credit" styleName="TextStyle" value="Yes" groupName="stockPurchaseRBGroup" tabIndex="5" />
						<s:RadioButton id="amtNotSettled" label="Debit" styleName="TextStyle" value="No" groupName="stockPurchaseRBGroup" tabIndex="6" />
					</s:VGroup>
					<s:VGroup height="100%" width="120" horizontalAlign="right" gap="12" verticalAlign="middle">
						<mx:Label text="Comments :" styleName="FormlabelStyle"/>
					</s:VGroup>
					<s:VGroup width="170" height="100%" horizontalAlign="right">
						<s:TextArea id="commentTxtArea" styleName="TextInputStyle" height="100%" width="100%" tabIndex="7"/>
					</s:VGroup>
				</s:HGroup>
			</mx:VBox>
			
			<mx:HBox width="100%" horizontalAlign="center" styleName="colorBorder" id="gstStock"
					 paddingTop="10" paddingBottom="10" paddingRight="10" includeIn="ShowGST">
				<s:VGroup width="160" height="100%">
					<mx:Label text="CGST (%)" styleName="FormlabelStyle"/>
					<s:TextInput id="cgstTxtInput" styleName="TextInputStyle" tabIndex="8"/>
				</s:VGroup>
				<s:VGroup width="160" height="100%">
					<mx:Label text="SGST (%)" styleName="FormlabelStyle"/>
					<s:TextInput id="sgstTxtInput" styleName="TextInputStyle" tabIndex="9" />
				</s:VGroup>
				<s:VGroup width="160" height="100%">
					<mx:Label text="IGST (%)" styleName="FormlabelStyle"/>
					<s:TextInput id="igstTxtInput" styleName="TextInputStyle" tabIndex="10" />
				</s:VGroup>
			</mx:HBox>
			
			<mx:HBox width="100%" horizontalAlign="center" styleName="colorBorder" id="saleStock"
					 paddingTop="10" paddingBottom="10" paddingRight="10">
				<s:VGroup width="120" height="100%" horizontalAlign="right" gap="12">
					<mx:Label text="Category :" styleName="FormlabelStyle"/>
					<mx:Label text="Sales Price :" styleName="FormlabelStyle"/>
				</s:VGroup>
				<s:VGroup height="100%" width="160">
					<s:ComboBox id="categoryCmbBox" width="160" styleName="ComboBoxStyle" prompt="Select" tabIndex="11" 
								focusOut="categoryCmbBox_focusOutHandler()"/>
					<s:TextInput id="salesPriceTxtInput" width="160" styleName="TextInputStyle" tabIndex="13" />
				</s:VGroup>
				
				<s:VGroup width="120" height="100%" horizontalAlign="right" gap="12">
					<mx:Label text="Item Name :" styleName="FormlabelStyle"/>
					<mx:Label text="Pics :" styleName="FormlabelStyle"/>
				</s:VGroup>
				<s:VGroup height="100%" width="160">
					<s:TextInput id="itemNameTxtInput" width="160" styleName="TextInputStyle" tabIndex="12" />
					<s:TextInput id="picsTxtInput" width="160" styleName="TextInputStyle" tabIndex="14" />
				</s:VGroup>
				
			</mx:HBox>
			
			<!--<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle">
				<mx:LinkButton icon="@Embed('./images/icon/add_32.png')" label="Add" useHandCursor="true" buttonMode="true" click="addSizeBtn_clickHandler()"/>
			</s:HGroup>
			
			<mx:HBox width="100%" horizontalAlign="center" styleName="colorBorder"
					 paddingTop="10" paddingBottom="10" paddingRight="10">
				<s:VGroup width="100%" height="100%" id="stockHBox">
				</s:VGroup>
			</mx:HBox>-->
			
			<s:HGroup width="100%" paddingBottom="10" paddingTop="10">
				<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle">
					<s:Button label="Add Stock" width="140" height="30" styleName="DefaultButton" useHandCursor="true" buttonMode="true" tabIndex="12"
							  click="addStockBtn_clickHandler()" keyDown="addStockBtn_clickHandler()"/>
				</s:HGroup>	
			</s:HGroup>
		</s:VGroup>
		<!--<s:VGroup width="100%" height="100%" paddingRight="10" styleName="colorBorder" paddingBottom="10" paddingTop="10">
			<s:VGroup height="100%" width="160" id="purchaseVGroup">
			</s:VGroup>
		</s:VGroup>-->
	</s:HGroup>
</s:TitleWindow>